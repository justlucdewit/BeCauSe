// BCS E010
// Coded by luke_
// 31-10-2021

import "std/io"

// Macro's for constants
macro BOARD_SIZE  100 end
macro RULE_NUMBER 110 end

// Set the last cell to true
1 mem BOARD_SIZE 3 - + !8

// Loop from 0 to 29
0 while dup BOARD_SIZE 2 - < do

    // Loop over the memory chunk to print each cell
    0 while dup BOARD_SIZE 2 - < do
        dup mem + @8 if
            "*" IO_WRITE
        else
            " " IO_WRITE
        end
        1 +
    end
    drop
    
    // Print new line
    '\n' mem BOARD_SIZE + !8
    1 mem BOARD_SIZE + IO_WRITE

    // Compute next generation
    // (mem[0] << 1) | mem[1]
    mem @8 1 <<
    mem 1 + @8 |

    1 while dup BOARD_SIZE 2 - < do
        swap 1 << 7 &
        over mem + 1 + @8 |
        2dup RULE_NUMBER swap >> 1 &
        swap mem + !8
        swap

        1 +
    end
    drop drop

    1 +
end